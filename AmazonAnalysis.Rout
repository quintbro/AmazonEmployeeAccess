
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.3     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──
✔ broom        1.0.5     ✔ rsample      1.2.0
✔ dials        1.2.0     ✔ tune         1.1.2
✔ infer        1.0.5     ✔ workflows    1.1.3
✔ modeldata    1.2.0     ✔ workflowsets 1.0.1
✔ parsnip      1.1.1     ✔ yardstick    1.2.0
✔ recipes      1.0.8     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()
• Learn how to get started at https://www.tidymodels.org/start/
> # library(ggmosaic)
> library(embed)
> library(vroom)

Attaching package: ‘vroom’

The following object is masked from ‘package:yardstick’:

    spec

The following object is masked from ‘package:scales’:

    col_factor

The following objects are masked from ‘package:readr’:

    as.col_spec, col_character, col_date, col_datetime, col_double,
    col_factor, col_guess, col_integer, col_logical, col_number,
    col_skip, col_time, cols, cols_condense, cols_only, date_names,
    date_names_lang, date_names_langs, default_locale, fwf_cols,
    fwf_empty, fwf_positions, fwf_widths, locale, output_column,
    problems, spec

> 
> # setwd("C:/Users/rileyw/AmazonEmployeeAccess")
> 
> vroom("train.csv") -> train
Rows: 32769 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (10): ACTION, RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTN...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> vroom("test.csv") -> test
Rows: 58921 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (10): id, RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTNAME,...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> am_recipe <- recipe(ACTION ~ .,data = train) %>%
+   step_mutate_at(all_numeric_predictors(), fn = factor) %>%
+   step_other(all_nominal_predictors(), threshold = .01, other = "OTHER") %>%
+   step_dummy(all_nominal_predictors())
>   
> prep(am_recipe) %>%
+   bake(new_data = train)
# A tibble: 32,769 × 112
   ACTION RESOURCE_X4675 RESOURCE_X25993 RESOURCE_X75078 RESOURCE_X79092
    <dbl>          <dbl>           <dbl>           <dbl>           <dbl>
 1      1              0               0               0               0
 2      1              0               0               0               0
 3      1              0               0               0               0
 4      1              0               0               0               0
 5      1              0               0               0               0
 6      0              0               0               0               0
 7      1              0               1               0               0
 8      1              0               0               0               0
 9      1              0               0               0               0
10      1              0               0               0               0
# ℹ 32,759 more rows
# ℹ 107 more variables: RESOURCE_OTHER <dbl>, MGR_ID_OTHER <dbl>,
#   ROLE_ROLLUP_1_X117902 <dbl>, ROLE_ROLLUP_1_X117961 <dbl>,
#   ROLE_ROLLUP_1_X118212 <dbl>, ROLE_ROLLUP_1_X118290 <dbl>,
#   ROLE_ROLLUP_1_X118315 <dbl>, ROLE_ROLLUP_1_X118887 <dbl>,
#   ROLE_ROLLUP_1_X119062 <dbl>, ROLE_ROLLUP_1_OTHER <dbl>,
#   ROLE_ROLLUP_2_X117962 <dbl>, ROLE_ROLLUP_2_X117969 <dbl>, …
> 
> 
> train %>%
+   select(ACTION, ROLE_TITLE) %>%
+   table()
      ROLE_TITLE
ACTION 117879 117885 117896 117899 117905 117906 117946 117985 118028 118043
     0    139     26      5     18    116      0     53      6     15     17
     1   1117    780    160    222   3467      1    276     12     71    221
      ROLE_TITLE
ACTION 118047 118054 118129 118172 118194 118203 118207 118259 118274 118278
     0      0     23      8      4      0      0      3     11     15      4
     1     12    751     20     60     37     11    137    263    149    192
      ROLE_TITLE
ACTION 118293 118318 118321 118361 118368 118370 118396 118422 118451 118459
     0      9     18    370      0      5      2     36      3     17      0
     1    171    167   4279     92    106     10    306    373    504     18
      ROLE_TITLE
ACTION 118465 118502 118523 118530 118536 118563 118568 118636 118641 118674
     0      1      1      8      9      3      6     78     20      5     15
     1     67     62    167     46     78     85    965    324    283     13
      ROLE_TITLE
ACTION 118685 118702 118728 118734 118747 118760 118777 118784 118792 118801
     0     15     22      4      0      8      0     48    125      0      2
     1    582    130    112      9    210      7    518   1647     43     16
      ROLE_TITLE
ACTION 118805 118811 118826 118834 118841 118863 118890 118912 118924 118958
     0      0      9      1      4      9      1     14      1      1      1
     1     25     73    171    331     74    120    333    158     33     90
      ROLE_TITLE
ACTION 118980 118995 119004 119065 119077 119093 119137 119172 119192 119219
     0     11     46      1      1      0      3      8      0      7      1
     1    136    153     11     25      8    221     69     43    189      7
      ROLE_TITLE
ACTION 119323 119346 119351 119363 119409 119433 119502 119529 119587 119743
     0     10     10      3      0      0      2      6      0      4      1
     1     65     20     65     19     13    197      7      5     49     35
      ROLE_TITLE
ACTION 119778 119782 119786 119849 119885 119899 119928 119949 119962 119976
     0      5      0      0     26      1      6      7      2      2      4
     1     11     17      5    311      9     28    169    135    195      9
      ROLE_TITLE
ACTION 119997 120001 120006 120033 120056 120069 120097 120115 120132 120172
     0      4      0      0      1      0      0      8      0      2      0
     1     13     10    216     17     27      4    167      2     18     24
      ROLE_TITLE
ACTION 120284 120300 120313 120344 120348 120357 120418 120497 120516 120527
     0      0      0      8     28      0      5      0      2      1      1
     1      3      9     55    445     34     94     33    158    123     17
      ROLE_TITLE
ACTION 120560 120575 120578 120591 120611 120618 120621 120628 120632 120647
     0      0      0      0      1      1      0      0      2      0      8
     1     54      5     22     59     23     48     10     18     27    203
      ROLE_TITLE
ACTION 120690 120702 120765 120773 120789 120812 120903 120952 120988 120990
     0      4      2      2     25      8      4      1      1      0      2
     1    213     33     11    264    102     69      8    134     33     71
      ROLE_TITLE
ACTION 121015 121067 121122 121143 121246 121364 121372 121414 121469 121527
     0      0      2      0      0      0      0      0      0      1      0
     1     12     25     34     24      5      2     43     36     41     37
      ROLE_TITLE
ACTION 121594 121618 121915 122022 122030 122060 122067 122129 122142 122188
     0     24      1      0      0      0      0      8      0      0      0
     1    123      6     14     47     18     30     95    104      5      1
      ROLE_TITLE
ACTION 122269 122274 122290 122297 122345 122551 122645 122849 122860 122927
     0      0      0      0      0      0      2      6      2      0      0
     1     31     17     21     49      2     53     46    113      8      8
      ROLE_TITLE
ACTION 122952 122967 122989 123045 123067 123073 123082 123131 123178 123191
     0      4      0      1      1      1      0      0      0      0      2
     1     12     33      6    106    153      2     28      1      7     13
      ROLE_TITLE
ACTION 123400 123408 123609 123615 123648 123651 123670 123684 123737 123850
     0      1      0      0      1      1      0      1      0      1      0
     1      3      9      4     17     37     17     57     12     84      3
      ROLE_TITLE
ACTION 124000 124134 124144 124152 124194 124246 124305 124313 124419 124435
     0      0      4      0      0      0      0      0      1      1      2
     1      3      3      7     24     56      2     33     14     13     33
      ROLE_TITLE
ACTION 124486 124537 124576 124775 124799 124810 124886 124922 125010 125171
     0      0      0      1      0      0      0      9      0      0      0
     1      1     26     22     10      8     15    136      3      7     14
      ROLE_TITLE
ACTION 125405 125687 125751 125793 125798 126078 126085 126110 126138 126184
     0      0      0      0      0      1      0      7      0      0      0
     1      1     26     18     60      2     10     14      7     35     30
      ROLE_TITLE
ACTION 126264 126293 126418 126502 126516 126538 126547 126684 126746 126820
     0      0      0      0      0      0      0      1     24      0      2
     1     10      6      1      1     11      4      0     86      4     21
      ROLE_TITLE
ACTION 126869 126931 127031 127108 127389 127589 127657 127700 127723 127782
     0      0      0      2      1      0      0      0      1      0      0
     1     16      1      0     16     21      4      2     16     16     40
      ROLE_TITLE
ACTION 127847 127850 127955 128093 128197 128230 128351 128422 128764 128903
     0      0      0      0      3      0     18      0      5      1      0
     1      5     11      3     51     16    183      3     33     18      7
      ROLE_TITLE
ACTION 129229 129561 129909 130060 130284 130362 130479 130528 130606 130633
     0      1      1      1      0      0      0      8      0      1      0
     1     31      7     28      5      1      1     74      4      6      1
      ROLE_TITLE
ACTION 130637 130857 131252 131336 131795 131849 131997 132096 132103 132583
     0      1      1      0      0      0      3      0      0      0      0
     1      6     41      2      2     14      5      7     13      4      3
      ROLE_TITLE
ACTION 132671 132692 132723 132737 133111 133306 133646 133718 134067 134095
     0      1      3      0      0      0      5      0      0      1      0
     1     57     42      2      2     38     40      2     11     12     14
      ROLE_TITLE
ACTION 134118 134655 135123 135740 135809 136115 136701 137370 137969 138019
     0      0      0      0      0      0      0      1      0      1      0
     1     14      4      7      8     25      3      5      1      6     25
      ROLE_TITLE
ACTION 138137 139965 140847 143183 144353 145648 146249 146951 147122 149228
     0      0      0      0      0      0      0      0      0      0      0
     1      6      3      7      6     10      8      5      2      3      8
      ROLE_TITLE
ACTION 149337 149351 149916 150074 150752 152268 152308 153248 153893 153957
     0      0      0      0      0      0      0      0      0      0      2
     1      9      2      1      3     17      1      2      1      2      8
      ROLE_TITLE
ACTION 155110 157300 157347 157359 157799 158289 159116 159677 159787 161098
     0      1      0      0      0      0      0      0      0      0      0
     1      0      1      1      1      1      5      3      3     18      2
      ROLE_TITLE
ACTION 162860 166592 166800 169634 174391 179731 180927 184274 187168 188046
     0      0      0      0      0      0     18      0      0      0      0
     1      5      6      1     11     10    366      4      7      3      1
      ROLE_TITLE
ACTION 192867 208126 208565 209874 212192 216825 235351 239003 240103 247659
     0      1      0      0      0      0      0      0      0      0      0
     1      4      2      1      1      2      7      3      1      1      8
      ROLE_TITLE
ACTION 258434 259173 266862 268608 270690 273308 279482 280788 297560 299559
     0      0      9      0      0      0      0      0     34      0      1
     1      7    106      1      1      1     37      4    360      1     10
      ROLE_TITLE
ACTION 307024 310825 311867
     0     36      0      0
     1    431      1      4
> 
> # creating mosaic
> #train %>%
> #  mutate_all(as_factor) %>%
> #ggplot() +
> #  geom_mosaic(aes(x = product(ACTION, ROLE_FAMILY), fill = ACTION))
> 
> 
> length(unique(train$RESOURCE))
[1] 7518
> length(unique(train$MGR_ID))
[1] 4243
> length(unique(train$ROLE_ROLLUP_1))
[1] 128
> length(unique(train$ROLE_ROLLUP_2))
[1] 177
> length(unique(train$ROLE_DEPTNAME))
[1] 449
> length(unique(train$ROLE_TITLE))
[1] 343
> length(unique(train$ROLE_FAMILY_DESC))
[1] 2358
> length(unique(train$ROLE_FAMILY))
[1] 67
> length(unique(train$ROLE_CODE))
[1] 343
> 
> 
> #----------- Logistic Regression --------------------
> library(tidyverse)
> library(tidymodels)
> library(vroom)
> 
> 
> # setwd("C:/Users/rileyw/AmazonEmployeeAccess")
> 
> vroom("train.csv") -> train
Rows: 32769 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (10): ACTION, RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTN...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> vroom("test.csv") -> test
Rows: 58921 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (10): id, RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTNAME,...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> train %>%
+   mutate(ACTION = as_factor(ACTION)) -> train
> 
> am_recipe <- recipe(ACTION ~ .,data = train) %>%
+   step_mutate_at(all_numeric_predictors(), fn = factor) %>%
+   step_other(all_nominal_predictors(), threshold = .01, other = "OTHER")%>%
+   step_dummy(all_nominal_predictors())
> 
> prep(am_recipe) %>%
+   bake(new_data = train)
# A tibble: 32,769 × 112
   ACTION RESOURCE_X4675 RESOURCE_X25993 RESOURCE_X75078 RESOURCE_X79092
   <fct>           <dbl>           <dbl>           <dbl>           <dbl>
 1 1                   0               0               0               0
 2 1                   0               0               0               0
 3 1                   0               0               0               0
 4 1                   0               0               0               0
 5 1                   0               0               0               0
 6 0                   0               0               0               0
 7 1                   0               1               0               0
 8 1                   0               0               0               0
 9 1                   0               0               0               0
10 1                   0               0               0               0
# ℹ 32,759 more rows
# ℹ 107 more variables: RESOURCE_OTHER <dbl>, MGR_ID_OTHER <dbl>,
#   ROLE_ROLLUP_1_X117902 <dbl>, ROLE_ROLLUP_1_X117961 <dbl>,
#   ROLE_ROLLUP_1_X118212 <dbl>, ROLE_ROLLUP_1_X118290 <dbl>,
#   ROLE_ROLLUP_1_X118315 <dbl>, ROLE_ROLLUP_1_X118887 <dbl>,
#   ROLE_ROLLUP_1_X119062 <dbl>, ROLE_ROLLUP_1_OTHER <dbl>,
#   ROLE_ROLLUP_2_X117962 <dbl>, ROLE_ROLLUP_2_X117969 <dbl>, …
> 
> log_mod <- logistic_reg() %>%
+   set_engine("glm")
> 
> log_wf <- workflow() %>%
+   add_model(log_mod) %>%
+   add_recipe(am_recipe) %>%
+   fit(data = train)
> 
> preds <- predict(log_wf, new_data = test, type = "prob")
Warning message:
In predict.lm(object, newdata, se.fit, scale = 1, type = if (type ==  :
  prediction from rank-deficient fit; attr(*, "non-estim") has doubtful cases
> 
> preds %>%
+   mutate(Id = test$id, Action = .pred_1) %>%
+   select(Id, Action) %>%
+   vroom_write(., "submission.csv", delim = ",")
> 
> 
> #------------- Penalized Logistic Regression ------------------
> 
> # library(tidyverse)
> # library(tidymodels)
> # library(vroom)
> # library(embed)
> 
> 
> # setwd("C:/Users/rileyw/AmazonEmployeeAccess")
> 
> # vroom("train.csv") -> train
> # vroom("test.csv") -> test
> # 
> # train %>%
> #   mutate(ACTION = as_factor(ACTION)) -> train
> # 
> # am_recipe <- recipe(ACTION ~ .,data = train) %>%
> #   step_mutate_at(all_numeric_predictors(), fn = factor) %>%
> #   step_other(all_nominal_predictors(), threshold = .001, other = "OTHER")%>%
> #   step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION))
> 
> pen_mod <- logistic_reg(mixture = tune(),
+                         penalty = tune()) %>%
+   set_engine("glmnet")
> 
> pen_wf <- workflow() %>%
+   add_recipe(am_recipe) %>%
+   add_model(pen_mod)
> 
> tuning_grid <- grid_regular(
+   mixture(),
+   penalty(),
+   levels = 3
+ )  
> 
> folds <- vfold_cv(data = train, v = 5, repeats = 1)
> 
> cv_results <- pen_wf %>%
+   tune_grid(resamples = folds,
+             grid = tuning_grid,
+             metrics = metric_set(roc_auc))
> 
> params <- cv_results %>%
+   select_best("roc_auc")
> 
> final_wf <- pen_wf %>%
+   finalize_workflow(params) %>%
+   fit(data = train)
> 
> preds <- predict(final_wf, new_data = test, type = "prob")
> 
> preds %>%
+   mutate(Id = test$id, Action = .pred_1) %>%
+   select(Id, Action) %>%
+   vroom_write(., "submission.csv", delim = ",")
> 
> 
> 
> proc.time()
   user  system elapsed 
139.177   3.183 117.412 
